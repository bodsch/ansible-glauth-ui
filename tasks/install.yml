---

- name: detect binary file for glauth-ui
  become: false
  delegate_to: "{{ glauth_ui_delegate_to }}"
  ansible.builtin.stat:
    path: "{{ glauth_ui_local_tmp_directory }}/glauth-ui"
  register: stat_file_binary

- name: propagate files
  when:
    - stat_file_binary.stat.exists
  block:
    - name: propagate glauth binaries
      ansible.builtin.copy:
        src: "{{ glauth_ui_local_tmp_directory }}/glauth-ui"
        dest: "{{ glauth_ui_install_path }}/glauth-ui"
        mode: 0755
        owner: "{{ glauth_ui_system_user }}"
        group: "{{ glauth_ui_system_group }}"
        remote_src: "{{ 'true' if glauth_ui_direct_download else 'false' }}"

    - name: make files executable
      ansible.builtin.file:
        path: "{{ glauth_ui_install_path }}/glauth-ui"
        mode: 0755
        owner: "{{ glauth_ui_system_user }}"
        group: "{{ glauth_ui_system_group }}"

- name: copy locales in place
  ansible.builtin.copy:
    src: "{{ glauth_ui_local_tmp_directory }}/locales"
    dest: "{{ glauth_ui_install_path }}/"
    mode: 0644
    owner: "{{ glauth_ui_system_user }}"
    group: "{{ glauth_ui_system_group }}"
    remote_src: "{{ 'true' if glauth_ui_direct_download else 'false' }}"

- name: create custom fact file
  bodsch.core.facts:
    name: glauth_ui
    facts:
      version: "{{ glauth_ui_version }}"

- name: create glauth-ui log directory
  ansible.builtin.file:
    state: directory
    path: "{{ glauth_ui_logs.path | default('/var/log/glauth-ui') }}"
    group: "{{ glauth_ui_system_group }}"
    mode: 0775

- name: create link to binary
  ansible.builtin.file:
    src: "{{ glauth_ui_install_path }}/glauth-ui"
    dest: "/usr/bin/glauth-ui"
    state: link
    force: true
    follow: false
  notify:
    - restart glauth-ui

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/glauth-ui.service.j2"
        dest: "{{ systemd_lib_directory }}/glauth-ui.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart glauth-ui

    - name: create glauth-ui run configuration
      ansible.builtin.template:
        src: "glauth-ui.j2"
        dest: "{{ glauth_ui_defaults_directory }}/glauth-ui"
        force: true
        owner: root
        group: "{{ glauth_ui_system_group }}"
        mode: 0640
      notify:
        - validate config
        - restart glauth-ui

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/glauth-ui.j2"
        dest: "/etc/conf.d/glauth-ui"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/glauth-ui.j2"
        dest: "/etc/init.d/glauth-ui"
        owner: root
        group: root
        mode: 0750

...
